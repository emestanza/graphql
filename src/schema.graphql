type Query {
    hello(name: String): String!
    quantity: Int!
    user(id: ID): [User!]!
    author(id: ID): [Author!]!
    book(id: ID): [Book!]!
}

type User {
    id: ID!
    name: String!
    lastName: String!
    email: String!
}


type Author {
    id: ID!,
    name: String!,
    country: String!,
    register_by: User!
    books: [Book!]!
}


type Book {
    id: ID!,
    title: String!,
    description: String!,
    quantity: Int!,
    price: Int!,
    writted_by: Author!,
    register_by: User!
}

type Mutation {
    createUser(
       data: createUserInput
    ): User!

    updateUser(
       data: updateUserInput
    ): User!

    createAuthor(
        data: createAuthorInput
    ): Author!

    updateAuthor(
       data: updateAuthorInput
    ): Author!

    createBook(
        data: createBookInput
    ): Book!

    updateBook(
        data: updateBookInput
    ): Book!

    deleteBook(
        id: ID!
    ): Book!
}

input createUserInput {
    name: String!,
    lastName: String!,
    email: String!,
    password: String!
}

input updateUserInput{
    id: ID!
    name: String
    lastName: String
    email: String
    password: String
}

input createAuthorInput{
    name: String!,
    country: String!,
    register_by: ID!,
}

input updateAuthorInput{
    id: ID!,
    name: String,
    country: String,
    register_by: ID
}

input createBookInput{
    title: String!,
    description: String!,
    quantity: Int!,
    price: Int!,
    writted_by: ID!,
    register_by: ID!
}

input updateBookInput{
    id: ID!,
    title: String,
    description: String,
    quantity: Int,
    price: Int,
    writted_by: ID,
    register_by: ID
}